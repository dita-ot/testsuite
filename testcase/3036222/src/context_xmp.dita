<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="referenceId">
  <title>Examples of supplying context to content</title>
  <shortdesc>Depending on the content, the method you use to supply the context varies.</shortdesc>
    <refbody>
        <section>
            <p>While you can use the push-replace conref facility to change or add additional
                context to reused content, this paper will not look at that method. This paper
                examines an architecture to help you manage the context changes by externalizing the
                context in DITA maps that contain the resolution for the contextually-rich
                context.</p>
        </section><section><title>Base content with references</title><p>The following DITA code shows some context-free content. To this base, we will add elements so we
                can add context to the base and later use maps to control the context for the
                topic.</p><codeblock>&lt;concept>
&lt;title>Features of the phone&lt;/title>
&lt;conbody>
&lt;p>Your phone comes with many new features that allow you
to do more than just make calls. You can surf the web,
read books, or do many things that you can do on a computer.
&lt;/p>
&lt;p>For a modest price, you can also purchase accessories that
improve your capabilities. These accessories are available
at the website.&lt;/p>
&lt;/conbody>&lt;/concept></codeblock><p>As you can see from the example, you could use this to describe any number of phones that
                currently exist.</p></section><section>
            <title>Context scaffolding</title>
            <p>Now that the base content exists, it is simple to add elements to the content to
                enable the build processing to easily add the context needed. The base content in
                the previous example has two obvious places where we can add context: a feature list
                and an accessory list. Another place we can make a change, is to make the generic
                text, <q>the phone</q> and have that change based on the context. The following DITA
                code is an example of how this would look. This code resides in
                    <filepath>base_content.dita</filepath>.</p>
            <codeblock>&lt;concept id="scaffold">
&lt;title>Features of the &lt;keyword keyref="model"/>
&lt;/title>
&lt;conbody>
&lt;p>Your phone comes with many new features that allow you
to do more than just make calls. You can surf the web,
read books, or do many things that you can do on a computer.
&lt;/p>
&lt;ul conkeyref="model/features">
&lt;li>Bad key&lt;/li>
&lt;/ul>
&lt;p>For a modest price, you can also purchase accessories that
improve your capabilities. These accessories are available
at the website.&lt;/p>
&lt;ul conkeyref="model/accessories">
&lt;li>Bad key&lt;/li>
&lt;/ul>
&lt;/conbody>&lt;/concept></codeblock>
            <p>If the processor cannot resolve the conkeyref, the content in the base element is
                processed to the output stream. In the case of the title, the output gives us an
                incomplete title, alerting us to the fact that something is not quite right.</p>
        </section>
        <section>
            <title>A sample map to resolve the keys</title>
            <p>To complete the picture, you need a map that defines the keys that the content
                references. Jumping ahead, this paper presents a map that contains references to all
                the possible contexts and filtering that allows only one key definition to come
                through. If the key definitions were not filtered correctly, the first key
                definition the processor encounters would be the value used, which may not be
                desirable. The next code sections show the DITA map used to process the example, a
                sample ditaval file to drive the filtering of the map and one of the content files
                that contains the lists referenced by the base content.</p>
            <p>This DITA code is the DITA map.</p>
            <codeblock>&lt;map title="Phone User's Guide">
&lt;mapref product="phoneA" keys="model"
processing-role="resource-only"
href="productA/central_content.dita">
&lt;topicmeta>&lt;keywords>&lt;keyword>Model A&lt;/keyword>
&lt;/keywords>&lt;/topicmeta>&lt;/topicref>
&lt;mapref product="phoneB" keys="model"
processing-role="resource-only"
href="productB/central_content.dita">
&lt;topicmeta>&lt;keywords>&lt;keyword>Model B&lt;/keyword>
&lt;/keywords>&lt;/topicmeta>&lt;/topicref>
&lt;mapref product="phoneC" keys="model"
processing-role="resource-only"
href="productC/central_content.dita">
&lt;topicmeta>&lt;keywords>&lt;keyword>Model C&lt;/keyword>
&lt;/keywords>&lt;/topicmeta>&lt;/topicref>
&lt;mapref product="phoneD" keys="model"
processing-role="resource-only"
href="productD/central_content.dita">
&lt;topicmeta>&lt;keywords>&lt;keyword>Model D&lt;/keyword>
&lt;/keywords>&lt;/topicmeta>&lt;/topicref>
&lt;topicref href="base_content.dita"/>&lt;/map></codeblock>
            <p>The ditaval file used to process the map could contain the following ditaval
                code.</p>
            <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;val>
   &lt;prop action="exclude" att="product" val="phoneA"/>
   &lt;prop action="exclude" att="product" val="phoneB"/>
   &lt;prop action="include" att="product" val="phoneC"/>
   &lt;prop action="exclude" att="product" val="phoneD"/>
&lt;/val></codeblock>
            <p>Next is a portion of the contents of
                <filepath>phoneC/central_content.dita</filepath>.</p>
            <codeblock>&lt;dita>
...
&lt;concept id="reuse_concepts">
&lt;conbody>
&lt;ul id="features">
&lt;li>Product C&lt;/li>
&lt;li>8 MP camera&lt;/li>
&lt;li>32 G memory installed&lt;/li>
&lt;li>QWERTY keyboard&lt;/li>
&lt;li>Web browser&lt;/li>
&lt;li>Voice recognition&lt;/li>
&lt;li>Hands-free capability&lt;/li>
&lt;/ul>
&lt;ul id="accessories">
&lt;li>Hands-free speaker&lt;/li>
&lt;li>Auto charger adapter&lt;/li>
&lt;li>64 G memory module&lt;/li>
&lt;li>Leather case&lt;/li>
&lt;/ul>
...
&lt;conbody>
&lt;/concept>
...
&lt;/dita></codeblock>
            <p>When you build the map with the ditaval file, the following example results.</p>
            <image href="Pages from key_test.png" width="5in"/>
        </section>
    </refbody>
</reference>
